generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int       @id @default(autoincrement())
  userName  String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]

  @@map("customers")
}

model Session {
  deviceId   Int       @id @default(autoincrement())
  customerId Int?
  exp        Int?
  ip         String?
  deviceName String?
  iat        Int?
  customer   Customer? @relation(fields: [customerId], references: [id])

  @@map("sessions")
}

model Administrator {
  id                Int                 @id @default(autoincrement())
  userName          String
  password          String
  AdministratorRole AdministratorRole[]

  @@map("administrator")
}

model AdministratorRole {
  id              Int           @id @default(autoincrement())
  administratorId Int
  roleId          Int
  administrator   Administrator @relation(fields: [administratorId], references: [id])
  role            Role          @relation(fields: [roleId], references: [id])

  @@map("administratorRole")
}

model Role {
  id                Int                 @id @default(autoincrement())
  code              Int
  name              String
  description       String
  AdministratorRole AdministratorRole[]

  @@map("role")
}

model Payment {
  id         Int           @id @default(autoincrement())
  orderId    Int
  total      Float
  customerId Int
  provider   String
  status     PaymentStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@map("payment")
}

enum PaymentStatus {
  PENDING
  SUCCESSFUL
  FAILED
}
